<?php

/**
 * @file
 * Module file. Gives the the users ability to search for libraries through the OpenAgency webservice
 */

/**
 * Implements hook_form_FORM_ID_alter (ting_admin_ting_settings)
 * Creates a field for adding a URL for the Ting Agency Serach webservice
 */
function bibdk_vejviser_form_ting_admin_ting_settings_alter(&$form, &$form_state, $form_id) {
  $form['ting']['agency_search_url'] = array(
    '#type' => 'textfield',
    '#title' => t('OpenAgency URL'),
    '#description' => t('URL to the Ting agency search webservice, e.g. http://openagency.addi.dk/1.6/'),
    '#required' => TRUE,
    '#default_value' => variable_get('agency_search_url', ''),
  );
}

/**
 * Implements hook_form_FORM_ID_alter (ting_client_admin_webservices_settings)
 * Creates a field for adding a URL for the Ting Agency Search webservice
 */
function bibdk_vejviser_form_ting_client_admin_webservices_settings_alter(&$form, &$form_state, $form_id) {
  $form['ting']['agency_search_url'] = array(
    '#type' => 'textfield',
    '#title' => t('OpenAgency URL'),
    '#description' => t('URL to the Ting agency search webservice, e.g. http://openagency.addi.dk/1.6/'),
    '#required' => TRUE,
    '#default_value' => variable_get('agency_search_url', ''),
  );
}


/**
 * Implements hook_block_info();
 */
function bibdk_vejviser_block_info() {
  $blocks['bibdk_vejviser'] = array(
    'info' => t('Bibdk Vejviser'),
    'description' => t('Search for libraries'),
    'cache' => DRUPAL_NO_CACHE,
  );

  return $blocks;
}

/**
 * Implements hook_block_configure();
 */
function bibdk_vejviser_block_view($delta = '') {
  switch ($delta) {
    case 'bibdk_vejviser':
      $block['title'] = t('Find Library');
      $block['content'] = drupal_get_form('bibdk_vejviser_form');
      return $block;
      break;
  }
}

/**
 * Implements hook_menu();
 * @return boolean
 */
function bibdk_vejviser_menu() {
  $items['vejviser'] = array(
    'title' => 'Vejviser',
    'page callback' => 'bibdk_vejviser_execute_agency_search',
    'access callback' => TRUE,
  );
  return $items;
}

/**
 * Implementation of hook_theme().
 */
function bibdk_vejviser_theme() {
  return array(
    'bibdk_vejviser' => array(
      'variables' => array(),
      'template' => 'template/bibdk_vejviser',
    ),
  );
}

/**
 * Creates the form array
 * @return array
 */
function bibdk_vejviser_form($form) {

  $form['openagency_name'] = array(
    '#type' => 'textfield',
    '#title' => t('Name'),
    '#size' => 5,
  );
  $form['openagency_zip'] = array(
    '#type' => 'textfield',
    '#title' => t('Zip'),
    '#size' => 5,
  );
  $form['openagency_city'] = array(
    '#type' => 'textfield',
    '#title' => t('City'),
    '#size' => 5,
  );

  $form['openagency_submit'] = array(
    '#type' => 'submit',
    '#value' => t('Search'),
    '#executes_submit_callback' => TRUE,
  );
  return $form;
}

/**
 * Called when form is submitted. Validating the input, json_encoding the input array and passes it to /vejviser
 * @param type $form
 * @param type $form_state
 */
function bibdk_vejviser_form_submit(&$form, &$form_state) {
  $name = check_plain($form_state['values']['openagency_name']);
  $zip = check_plain($form_state['values']['openagency_zip']);
  $city = check_plain($form_state['values']['openagency_city']);

  //If all input fields are empty notify the user
  if (!bibdk_vejviser_validate_name($name) && !bibdk_vejviser_validate_zip($zip) && !bibdk_vejviser_validate_city($city)) {
    drupal_set_message(t('You haven\'t entered any search criteria.'), 'error');
  }
  else {
    $query = array('openagency_name' => $name, 'openagency_zip' => $zip, 'openagency_city' => $city);
    drupal_goto('vejviser', array('query' => $query));
  }
}

/**
 * Callback function for the /vejviser menu item. Called when user hits http://domain.dk/vejviser. Takes the above encoded json string as input
 * There might be a better way for passing the search criterias
 * @param String $json
 * @return array
 */
function bibdk_vejviser_execute_agency_search() {
  if (isset($_REQUEST['openagency_name']) || isset($_REQUEST['openagency_zip']) || isset($_REQUEST['openagency_city'])) {
    $name = check_plain($_REQUEST['openagency_name']);
    $zip = check_plain($_REQUEST['openagency_zip']);
    $city = check_plain($_REQUEST['openagency_city']);
  }

  $result = array();

  if (isset($name) || isset($zip) || isset($city)) {
    module_load_include('inc', 'ting_openformat', 'ting_openformat.search_client');
    $client = new ting_client_class();
    $resp = $client->do_agency_search(array('agencyName' => $name, 'postalCode' => $zip, 'city' => $city));
    $result = bibdk_vejviser_handle_response($resp);
  } else {
    drupal_set_message('TESTHEST');
    //TODO some user information should be displayed to tell the user that he accessed /vejviser without having performed OpenAgency search
  }

  if( !empty($result) ) {
    // add a button to each branch
    foreach ($result['libraries'] as $agency) {
      foreach ($agency->pickUpAgencies as $branch) {
        $branch->button = drupal_get_form('bibdk_vejviser_select_form',$branch);
      }
    }
  }

  $markup = theme('bibdk_vejviser', array('result' => $result));
  return $markup;
}

function bibdk_vejviser_select_form($form,$form_state) {
  $form['favourite_button'] = array(
    '#type'=>'submit',
    '#value'=>t('TilfÃ¸j til favoritbiblioteker'),
    '#ajax' => array(
      'callback' => 'bibdk_vejviser_ajax_add_favourite',
    ),
  );

  return $form;
}

/**
 * Ajax callback function
 * add favourite to session
 * set a message
 **/
function bibdk_vejviser_ajax_add_favourite($form, $form_state) {
  $branch = $form_state['build_info']['args'][0];
  bibdk_vejviser_add_favourite_to_session ($branch);
  $bibname = $_SESSION['bibdk_favourites'][$branch->branchId]->branchName;

  $text = t('@bibname has been added to your favourite libraries',array('@bibname'=>$bibname));

  $commands = array();
   // insert (replace)  a message in drupals messages area
  $selector = '.messages';
  drupal_set_message($text);
  $commands[] = ajax_command_replace($selector, theme('status_messages'));

  return array('#type' => 'ajax', '#commands' => $commands);
}

/**
 * Add favourite library to sesssion
 **/
function bibdk_vejviser_add_favourite_to_session ($branch) {
  if (!isset($_SESSION)) {
    drupal_session_initialize();
    $_SESSION['bibdk_favourites'] = array();
  }

  $_SESSION['bibdk_favourites'][$branch->branchId]=$branch;
}

/**
 * Handling the response.
 * Received errors needs handling. The role of this function is quite limited. It might be worth handling errors elsewhere and deprecate this function
 * @param array $response
 * @return array
 */
function bibdk_vejviser_handle_response($response) {

  if (isset($response['error']) && $response['error']) {
    //TODO handle error
  }
  else if (isset($response['libraries'])) {
    $result = $response;
    return $result;
  }
}

/**
 * Validate the name form variable. Method might be unused if only one searchfield is used
 * @param type $name
 * @return boolean
 */
function bibdk_vejviser_validate_name($name) {
  if (empty($name)) {
    return FALSE;
  }
  return TRUE;
}

/**
 * Validate the zip form variable. Method might be unused if only one searchfield is used
 * @param type $name
 * @return boolean
 */
function bibdk_vejviser_validate_zip($zip) {
  if (empty($zip)) {
    return FALSE;
  }
  return TRUE;
}

/**
 * Validate the city form variable. Method might be unused if only one searchfield is used
 * @param type $name
 * @return boolean
 */
function bibdk_vejviser_validate_city($city) {
  if (empty($city)) {
    return FALSE;
  }
  return TRUE;
}
